<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>cat &lt;&lt;'RUBYEOF' &gt; /tmp/ruby-amp-$$.rb

require "#{ENV['TM_SUPPORT_PATH']}/lib/ui.rb"
require "#{ENV["TM_BUNDLE_SUPPORT"]}/lib/ruby_tm_helpers.rb"

text = STDIN.read

separator = TextMate::UI.request_string(:title =&gt; "Swap around what?", :prompt =&gt; "Blank, a string, or a regexp (like /=.?/)", :default =&gt; ",")

if separator.nil?
  exit_discard
  exit
end


if separator =~ /^\/(.+)\/$/
  separator = $1
else
  separator = "\s*#{Regexp.escape(separator)}\s*"
end

# containing parenthesis
case text
when /^\((.+)\)$/
  prefix, text, suffix = '(', $1, ')'
when /^\[(.+)\]$/
  prefix, text, suffix = '[', $1, ']'
when /^\{(.+)\}$/
  prefix, text, suffix = '{', $1, '}'
end

exit unless /^(.+?)(#{separator})(.+)$/.match(text)

STDOUT &lt;&lt; "#{prefix}#{$3}#{$2}#{$1}#{suffix}"

RUBYEOF

${TM_RUBY:-ruby} -wKU /tmp/ruby-amp-$$.rb; exit_status=$?; rm /tmp/ruby-amp-$$.rb; exit $exit_status</string>
	<key>fallbackInput</key>
	<string>none</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^,</string>
	<key>name</key>
	<string>Swap around comma</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>uuid</key>
	<string>EF432C84-A45E-4133-870F-9D5EEB4F649E</string>
</dict>
</plist>
